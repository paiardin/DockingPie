# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_msms', [dirname(__file__)])
        except ImportError:
            import _msms
            return _msms
        if fp is not None:
            try:
                _mod = imp.load_module('_msms', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _msms = swig_import_helper()
    del swig_import_helper
else:
    import _msms
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_msms.MS_RS_SIMPLE_ASCII1_swigconstant(_msms)
MS_RS_SIMPLE_ASCII1 = _msms.MS_RS_SIMPLE_ASCII1

_msms.MS_RS_SIMPLE_ASCII2_swigconstant(_msms)
MS_RS_SIMPLE_ASCII2 = _msms.MS_RS_SIMPLE_ASCII2

_msms.MS_RS_SIMPLE_ASCII1_NORMALS_swigconstant(_msms)
MS_RS_SIMPLE_ASCII1_NORMALS = _msms.MS_RS_SIMPLE_ASCII1_NORMALS

_msms.MS_NON_PARTIAL_swigconstant(_msms)
MS_NON_PARTIAL = _msms.MS_NON_PARTIAL

_msms.MS_PARTIAL_swigconstant(_msms)
MS_PARTIAL = _msms.MS_PARTIAL

_msms.MS_TSES_ASCII_swigconstant(_msms)
MS_TSES_ASCII = _msms.MS_TSES_ASCII

_msms.MS_ASES_ASCII_swigconstant(_msms)
MS_ASES_ASCII = _msms.MS_ASES_ASCII

_msms.MS_TSES_ASCII_AVS_swigconstant(_msms)
MS_TSES_ASCII_AVS = _msms.MS_TSES_ASCII_AVS

_msms.MS_ASES_ASCII_AVS_swigconstant(_msms)
MS_ASES_ASCII_AVS = _msms.MS_ASES_ASCII_AVS

_msms.MS_NUMERICAL_swigconstant(_msms)
MS_NUMERICAL = _msms.MS_NUMERICAL

_msms.MS_SEMI_ANALYTICAL_swigconstant(_msms)
MS_SEMI_ANALYTICAL = _msms.MS_SEMI_ANALYTICAL

_msms.MS_BOTH_swigconstant(_msms)
MS_BOTH = _msms.MS_BOTH

_msms.MS_NOT_BURIED_swigconstant(_msms)
MS_NOT_BURIED = _msms.MS_NOT_BURIED

_msms.MS_BURIED_swigconstant(_msms)
MS_BURIED = _msms.MS_BURIED

_msms.MS_PARTIALLY_BURIED_swigconstant(_msms)
MS_PARTIALLY_BURIED = _msms.MS_PARTIALLY_BURIED

_msms.SAILLANT_swigconstant(_msms)
SAILLANT = _msms.SAILLANT

_msms.RENTRANT_swigconstant(_msms)
RENTRANT = _msms.RENTRANT

_msms.TORIQUE_swigconstant(_msms)
TORIQUE = _msms.TORIQUE

_msms.SINGULIER_swigconstant(_msms)
SINGULIER = _msms.SINGULIER

_msms.SINGULIER_TRAITE_swigconstant(_msms)
SINGULIER_TRAITE = _msms.SINGULIER_TRAITE

_msms.SELECT_swigconstant(_msms)
SELECT = _msms.SELECT

_msms.FULL_EATEN_swigconstant(_msms)
FULL_EATEN = _msms.FULL_EATEN

_msms.RENT_FUS_swigconstant(_msms)
RENT_FUS = _msms.RENT_FUS

_msms.FULL_TORUS1_swigconstant(_msms)
FULL_TORUS1 = _msms.FULL_TORUS1

_msms.FULL_TORUS2_swigconstant(_msms)
FULL_TORUS2 = _msms.FULL_TORUS2

_msms.MS_OK_swigconstant(_msms)
MS_OK = _msms.MS_OK

_msms.MS_ERR_swigconstant(_msms)
MS_ERR = _msms.MS_ERR

_msms.MS_ErrMsgMaxLen_swigconstant(_msms)
MS_ErrMsgMaxLen = _msms.MS_ErrMsgMaxLen

_msms.FULL_swigconstant(_msms)
FULL = _msms.FULL

_msms.TORIC_swigconstant(_msms)
TORIC = _msms.TORIC

_msms.ALL_WITH_DENSITY_swigconstant(_msms)
ALL_WITH_DENSITY = _msms.ALL_WITH_DENSITY

_msms.NO_TRIANGULATION_swigconstant(_msms)
NO_TRIANGULATION = _msms.NO_TRIANGULATION
class RSE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RSE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RSE, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.RSE_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.RSE_nxt_get)
    __swig_getmethods__["prv"] = _msms.RSE_prv_get
    if _newclass:
        prv = _swig_property(_msms.RSE_prv_get)
    __swig_getmethods__["f"] = _msms.RSE_f_get
    if _newclass:
        f = _swig_property(_msms.RSE_f_get)
    __swig_getmethods__["rsedual"] = _msms.RSE_rsedual_get
    if _newclass:
        rsedual = _swig_property(_msms.RSE_rsedual_get)
    __swig_getmethods__["nxtUp"] = _msms.RSE_nxtUp_get
    if _newclass:
        nxtUp = _swig_property(_msms.RSE_nxtUp_get)
    __swig_getmethods__["data"] = _msms.RSE_data_get
    if _newclass:
        data = _swig_property(_msms.RSE_data_get)
    __swig_getmethods__["n"] = _msms.RSE_n_get
    if _newclass:
        n = _swig_property(_msms.RSE_n_get)
    __swig_getmethods__["ct"] = _msms.RSE_ct_get
    if _newclass:
        ct = _swig_property(_msms.RSE_ct_get)
    __swig_getmethods__["rt"] = _msms.RSE_rt_get
    if _newclass:
        rt = _swig_property(_msms.RSE_rt_get)
    __swig_getmethods__["cp"] = _msms.RSE_cp_get
    if _newclass:
        cp = _swig_property(_msms.RSE_cp_get)
    __swig_getmethods__["angt"] = _msms.RSE_angt_get
    if _newclass:
        angt = _swig_property(_msms.RSE_angt_get)
    __swig_getmethods__["cc"] = _msms.RSE_cc_get
    if _newclass:
        cc = _swig_property(_msms.RSE_cc_get)
    __swig_getmethods__["rcc"] = _msms.RSE_rcc_get
    if _newclass:
        rcc = _swig_property(_msms.RSE_rcc_get)
    __swig_getmethods__["ps"] = _msms.RSE_ps_get
    if _newclass:
        ps = _swig_property(_msms.RSE_ps_get)
    __swig_getmethods__["s"] = _msms.RSE_s_get
    if _newclass:
        s = _swig_property(_msms.RSE_s_get)
    __swig_getmethods__["num"] = _msms.RSE_num_get
    if _newclass:
        num = _swig_property(_msms.RSE_num_get)
    __swig_getmethods__["sing"] = _msms.RSE_sing_get
    if _newclass:
        sing = _swig_property(_msms.RSE_sing_get)
    __swig_getmethods__["comp_num"] = _msms.RSE_comp_num_get
    if _newclass:
        comp_num = _swig_property(_msms.RSE_comp_num_get)
    __swig_getmethods__["type"] = _msms.RSE_type_get
    if _newclass:
        type = _swig_property(_msms.RSE_type_get)

    def _rsf0(self):
        return _msms.RSE__rsf0(self)

    def _rsf1(self):
        return _msms.RSE__rsf1(self)

    def _rsedual0(self):
        return _msms.RSE__rsedual0(self)

    def _rsedual1(self):
        return _msms.RSE__rsedual1(self)

    def _n(self):
        return _msms.RSE__n(self)

    def _ct(self):
        return _msms.RSE__ct(self)

    def _cp(self):
        return _msms.RSE__cp(self)

    def _cc(self):
        return _msms.RSE__cc(self)

    def _rcc(self):
        return _msms.RSE__rcc(self)

    def _ps(self):
        return _msms.RSE__ps(self)

    def _s(self):
        return _msms.RSE__s(self)

    def __init__(self):
        this = _msms.new_RSE()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_RSE
    __del__ = lambda self: None
RSE_swigregister = _msms.RSE_swigregister
RSE_swigregister(RSE)
MS_get_triangles = _msms.MS_get_triangles
cvar = _msms.cvar

class RSV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RSV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RSV, name)
    __repr__ = _swig_repr
    __swig_getmethods__["a"] = _msms.RSV_a_get
    if _newclass:
        a = _swig_property(_msms.RSV_a_get)
    __swig_getmethods__["rs"] = _msms.RSV_rs_get
    if _newclass:
        rs = _swig_property(_msms.RSV_rs_get)
    __swig_getmethods__["rsvdual"] = _msms.RSV_rsvdual_get
    if _newclass:
        rsvdual = _swig_property(_msms.RSV_rsvdual_get)
    __swig_getmethods__["data"] = _msms.RSV_data_get
    if _newclass:
        data = _swig_property(_msms.RSV_data_get)
    __swig_getmethods__["ses_area"] = _msms.RSV_ses_area_get
    if _newclass:
        ses_area = _swig_property(_msms.RSV_ses_area_get)
    __swig_getmethods__["sas_area"] = _msms.RSV_sas_area_get
    if _newclass:
        sas_area = _swig_property(_msms.RSV_sas_area_get)
    __swig_getmethods__["x"] = _msms.RSV_x_get
    if _newclass:
        x = _swig_property(_msms.RSV_x_get)
    __swig_getmethods__["r"] = _msms.RSV_r_get
    if _newclass:
        r = _swig_property(_msms.RSV_r_get)
    __swig_getmethods__["orig_r"] = _msms.RSV_orig_r_get
    if _newclass:
        orig_r = _swig_property(_msms.RSV_orig_r_get)
    __swig_getmethods__["bhtind"] = _msms.RSV_bhtind_get
    if _newclass:
        bhtind = _swig_property(_msms.RSV_bhtind_get)
    __swig_getmethods__["num"] = _msms.RSV_num_get
    if _newclass:
        num = _swig_property(_msms.RSV_num_get)
    __swig_getmethods__["nxt"] = _msms.RSV_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.RSV_nxt_get)
    __swig_getmethods__["nxtup"] = _msms.RSV_nxtup_get
    if _newclass:
        nxtup = _swig_property(_msms.RSV_nxtup_get)
    __swig_getmethods__["type"] = _msms.RSV_type_get
    if _newclass:
        type = _swig_property(_msms.RSV_type_get)
    __swig_getmethods__["mnba"] = _msms.RSV_mnba_get
    if _newclass:
        mnba = _swig_property(_msms.RSV_mnba_get)
    __swig_getmethods__["nba"] = _msms.RSV_nba_get
    if _newclass:
        nba = _swig_property(_msms.RSV_nba_get)
    __swig_getmethods__["nbf"] = _msms.RSV_nbf_get
    if _newclass:
        nbf = _swig_property(_msms.RSV_nbf_get)
    __swig_getmethods__["pb"] = _msms.RSV_pb_get
    if _newclass:
        pb = _swig_property(_msms.RSV_pb_get)
    __swig_getmethods__["surf"] = _msms.RSV_surf_get
    if _newclass:
        surf = _swig_property(_msms.RSV_surf_get)
    __swig_getmethods__["comp_num"] = _msms.RSV_comp_num_get
    if _newclass:
        comp_num = _swig_property(_msms.RSV_comp_num_get)
    __swig_getmethods__["free_edge_checked"] = _msms.RSV_free_edge_checked_get
    if _newclass:
        free_edge_checked = _swig_property(_msms.RSV_free_edge_checked_get)
    __swig_getmethods__["hdensity"] = _msms.RSV_hdensity_get
    if _newclass:
        hdensity = _swig_property(_msms.RSV_hdensity_get)
    __swig_getmethods__["split"] = _msms.RSV_split_get
    if _newclass:
        split = _swig_property(_msms.RSV_split_get)
    __swig_getmethods__["name"] = _msms.RSV_name_get
    if _newclass:
        name = _swig_property(_msms.RSV_name_get)

    def get_a(self, i):
        return _msms.RSV_get_a(self, i)

    def get_rsvdual(self, i):
        return _msms.RSV_get_rsvdual(self, i)

    def _x(self):
        return _msms.RSV__x(self)

    def get_ses_area(self, i):
        return _msms.RSV_get_ses_area(self, i)

    def get_sas_area(self, i):
        return _msms.RSV_get_sas_area(self, i)

    def __init__(self):
        this = _msms.new_RSV()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_RSV
    __del__ = lambda self: None
RSV_swigregister = _msms.RSV_swigregister
RSV_swigregister(RSV)

class RSF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RSF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RSF, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.RSF_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.RSF_nxt_get)
    __swig_getmethods__["prv"] = _msms.RSF_prv_get
    if _newclass:
        prv = _swig_property(_msms.RSF_prv_get)
    __swig_getmethods__["a"] = _msms.RSF_a_get
    if _newclass:
        a = _swig_property(_msms.RSF_a_get)
    __swig_getmethods__["rsfdual"] = _msms.RSF_rsfdual_get
    if _newclass:
        rsfdual = _swig_property(_msms.RSF_rsfdual_get)
    __swig_getmethods__["fs"] = _msms.RSF_fs_get
    if _newclass:
        fs = _swig_property(_msms.RSF_fs_get)
    __swig_getmethods__["nxtUp"] = _msms.RSF_nxtUp_get
    if _newclass:
        nxtUp = _swig_property(_msms.RSF_nxtUp_get)
    __swig_getmethods__["nxtbUp"] = _msms.RSF_nxtbUp_get
    if _newclass:
        nxtbUp = _swig_property(_msms.RSF_nxtbUp_get)
    __swig_getmethods__["data"] = _msms.RSF_data_get
    if _newclass:
        data = _swig_property(_msms.RSF_data_get)
    __swig_getmethods__["v"] = _msms.RSF_v_get
    if _newclass:
        v = _swig_property(_msms.RSF_v_get)
    __swig_getmethods__["c"] = _msms.RSF_c_get
    if _newclass:
        c = _swig_property(_msms.RSF_c_get)
    __swig_getmethods__["s"] = _msms.RSF_s_get
    if _newclass:
        s = _swig_property(_msms.RSF_s_get)
    __swig_getmethods__["num"] = _msms.RSF_num_get
    if _newclass:
        num = _swig_property(_msms.RSF_num_get)
    __swig_getmethods__["uind"] = _msms.RSF_uind_get
    if _newclass:
        uind = _swig_property(_msms.RSF_uind_get)
    __swig_getmethods__["sind"] = _msms.RSF_sind_get
    if _newclass:
        sind = _swig_property(_msms.RSF_sind_get)
    __swig_getmethods__["comp_num"] = _msms.RSF_comp_num_get
    if _newclass:
        comp_num = _swig_property(_msms.RSF_comp_num_get)
    __swig_getmethods__["cp"] = _msms.RSF_cp_get
    if _newclass:
        cp = _swig_property(_msms.RSF_cp_get)
    __swig_getmethods__["mfl"] = _msms.RSF_mfl_get
    if _newclass:
        mfl = _swig_property(_msms.RSF_mfl_get)
    __swig_getmethods__["dir"] = _msms.RSF_dir_get
    if _newclass:
        dir = _swig_property(_msms.RSF_dir_get)

    def _a0(self):
        return _msms.RSF__a0(self)

    def _a1(self):
        return _msms.RSF__a1(self)

    def _a2(self):
        return _msms.RSF__a2(self)

    def _rsfdual0(self):
        return _msms.RSF__rsfdual0(self)

    def _rsfdual1(self):
        return _msms.RSF__rsfdual1(self)

    def _v(self):
        return _msms.RSF__v(self)

    def _c(self):
        return _msms.RSF__c(self)

    def _s(self):
        return _msms.RSF__s(self)

    def _dir(self):
        return _msms.RSF__dir(self)

    def __init__(self):
        this = _msms.new_RSF()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_RSF
    __del__ = lambda self: None
RSF_swigregister = _msms.RSF_swigregister
RSF_swigregister(RSF)

class RS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RS, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.RS_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.RS_nxt_get)
    __swig_getmethods__["prv"] = _msms.RS_prv_get
    if _newclass:
        prv = _swig_property(_msms.RS_prv_get)
    __swig_getmethods__["ses"] = _msms.RS_ses_get
    if _newclass:
        ses = _swig_property(_msms.RS_ses_get)
    __swig_getmethods__["ffa"] = _msms.RS_ffa_get
    if _newclass:
        ffa = _swig_property(_msms.RS_ffa_get)
    __swig_getmethods__["lfa"] = _msms.RS_lfa_get
    if _newclass:
        lfa = _swig_property(_msms.RS_lfa_get)
    __swig_getmethods__["lorsf"] = _msms.RS_lorsf_get
    if _newclass:
        lorsf = _swig_property(_msms.RS_lorsf_get)
    __swig_getmethods__["far0"] = _msms.RS_far0_get
    if _newclass:
        far0 = _swig_property(_msms.RS_far0_get)
    __swig_getmethods__["lar"] = _msms.RS_lar_get
    if _newclass:
        lar = _swig_property(_msms.RS_lar_get)
    __swig_getmethods__["ffar"] = _msms.RS_ffar_get
    if _newclass:
        ffar = _swig_property(_msms.RS_ffar_get)
    __swig_getmethods__["lfar"] = _msms.RS_lfar_get
    if _newclass:
        lfar = _swig_property(_msms.RS_lfar_get)
    __swig_getmethods__["fstrfup"] = _msms.RS_fstrfup_get
    if _newclass:
        fstrfup = _swig_property(_msms.RS_fstrfup_get)
    __swig_getmethods__["lstrfup"] = _msms.RS_lstrfup_get
    if _newclass:
        lstrfup = _swig_property(_msms.RS_lstrfup_get)
    __swig_getmethods__["fstreup"] = _msms.RS_fstreup_get
    if _newclass:
        fstreup = _swig_property(_msms.RS_fstreup_get)
    __swig_getmethods__["lstreup"] = _msms.RS_lstreup_get
    if _newclass:
        lstreup = _swig_property(_msms.RS_lstreup_get)
    __swig_getmethods__["fstRSbfup"] = _msms.RS_fstRSbfup_get
    if _newclass:
        fstRSbfup = _swig_property(_msms.RS_fstRSbfup_get)
    __swig_getmethods__["lstRSbfup"] = _msms.RS_lstRSbfup_get
    if _newclass:
        lstRSbfup = _swig_property(_msms.RS_lstRSbfup_get)
    __swig_getmethods__["fstfup"] = _msms.RS_fstfup_get
    if _newclass:
        fstfup = _swig_property(_msms.RS_fstfup_get)
    __swig_getmethods__["lstfup"] = _msms.RS_lstfup_get
    if _newclass:
        lstfup = _swig_property(_msms.RS_lstfup_get)
    __swig_getmethods__["fsteup"] = _msms.RS_fsteup_get
    if _newclass:
        fsteup = _swig_property(_msms.RS_fsteup_get)
    __swig_getmethods__["lsteup"] = _msms.RS_lsteup_get
    if _newclass:
        lsteup = _swig_property(_msms.RS_lsteup_get)
    __swig_getmethods__["uprbRBHT"] = _msms.RS_uprbRBHT_get
    if _newclass:
        uprbRBHT = _swig_property(_msms.RS_uprbRBHT_get)
    __swig_getmethods__["sprbRBHT"] = _msms.RS_sprbRBHT_get
    if _newclass:
        sprbRBHT = _swig_property(_msms.RS_sprbRBHT_get)
    __swig_getmethods__["data"] = _msms.RS_data_get
    if _newclass:
        data = _swig_property(_msms.RS_data_get)
    __swig_getmethods__["nbfcp"] = _msms.RS_nbfcp_get
    if _newclass:
        nbfcp = _swig_property(_msms.RS_nbfcp_get)
    __swig_getmethods__["nbfco"] = _msms.RS_nbfco_get
    if _newclass:
        nbfco = _swig_property(_msms.RS_nbfco_get)
    __swig_getmethods__["nbf"] = _msms.RS_nbf_get
    if _newclass:
        nbf = _swig_property(_msms.RS_nbf_get)
    __swig_getmethods__["nba"] = _msms.RS_nba_get
    if _newclass:
        nba = _swig_property(_msms.RS_nba_get)
    __swig_getmethods__["nbaf"] = _msms.RS_nbaf_get
    if _newclass:
        nbaf = _swig_property(_msms.RS_nbaf_get)
    __swig_getmethods__["nbs"] = _msms.RS_nbs_get
    if _newclass:
        nbs = _swig_property(_msms.RS_nbs_get)
    __swig_getmethods__["num"] = _msms.RS_num_get
    if _newclass:
        num = _swig_property(_msms.RS_num_get)
    __swig_getmethods__["ffat"] = _msms.RS_ffat_get
    if _newclass:
        ffat = _swig_property(_msms.RS_ffat_get)
    __swig_getmethods__["needFreeEdgeCheck"] = _msms.RS_needFreeEdgeCheck_get
    if _newclass:
        needFreeEdgeCheck = _swig_property(_msms.RS_needFreeEdgeCheck_get)
    __swig_getmethods__["split_rsv"] = _msms.RS_split_rsv_get
    if _newclass:
        split_rsv = _swig_property(_msms.RS_split_rsv_get)

    def _dir(self):
        return _msms.RS__dir(self)

    def __init__(self):
        this = _msms.new_RS()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_RS
    __del__ = lambda self: None
RS_swigregister = _msms.RS_swigregister
RS_swigregister(RS)

class RSR(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RSR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RSR, name)
    __repr__ = _swig_repr
    __swig_getmethods__["fst"] = _msms.RSR_fst_get
    if _newclass:
        fst = _swig_property(_msms.RSR_fst_get)
    __swig_getmethods__["lst"] = _msms.RSR_lst_get
    if _newclass:
        lst = _swig_property(_msms.RSR_lst_get)
    __swig_getmethods__["atm"] = _msms.RSR_atm_get
    if _newclass:
        atm = _swig_property(_msms.RSR_atm_get)
    __swig_getmethods__["atmBHT"] = _msms.RSR_atmBHT_get
    if _newclass:
        atmBHT = _swig_property(_msms.RSR_atmBHT_get)
    __swig_getmethods__["nb"] = _msms.RSR_nb_get
    if _newclass:
        nb = _swig_property(_msms.RSR_nb_get)
    __swig_getmethods__["nb_free_vert"] = _msms.RSR_nb_free_vert_get
    if _newclass:
        nb_free_vert = _swig_property(_msms.RSR_nb_free_vert_get)
    __swig_getmethods__["ffnba"] = _msms.RSR_ffnba_get
    if _newclass:
        ffnba = _swig_property(_msms.RSR_ffnba_get)
    __swig_getmethods__["ffat"] = _msms.RSR_ffat_get
    if _newclass:
        ffat = _swig_property(_msms.RSR_ffat_get)
    __swig_getmethods__["all_comp_done"] = _msms.RSR_all_comp_done_get
    if _newclass:
        all_comp_done = _swig_property(_msms.RSR_all_comp_done_get)
    __swig_getmethods__["ext_comp_done"] = _msms.RSR_ext_comp_done_get
    if _newclass:
        ext_comp_done = _swig_property(_msms.RSR_ext_comp_done_get)

    def set_ffat(self, at1, at2, at3):
        return _msms.RSR_set_ffat(self, at1, at2, at3)

    def _ffat(self):
        return _msms.RSR__ffat(self)

    def __init__(self):
        this = _msms.new_RSR()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_RSR
    __del__ = lambda self: None
RSR_swigregister = _msms.RSR_swigregister
RSR_swigregister(RSR)

class TRIV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TRIV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TRIV, name)
    __repr__ = _swig_repr
    __swig_getmethods__["c"] = _msms.TRIV_c_get
    if _newclass:
        c = _swig_property(_msms.TRIV_c_get)
    __swig_getmethods__["n"] = _msms.TRIV_n_get
    if _newclass:
        n = _swig_property(_msms.TRIV_n_get)
    __swig_getmethods__["uvw"] = _msms.TRIV_uvw_get
    if _newclass:
        uvw = _swig_property(_msms.TRIV_uvw_get)
    __swig_getmethods__["sesArea"] = _msms.TRIV_sesArea_get
    if _newclass:
        sesArea = _swig_property(_msms.TRIV_sesArea_get)
    __swig_getmethods__["sasArea"] = _msms.TRIV_sasArea_get
    if _newclass:
        sasArea = _swig_property(_msms.TRIV_sasArea_get)
    __swig_getmethods__["atm"] = _msms.TRIV_atm_get
    if _newclass:
        atm = _swig_property(_msms.TRIV_atm_get)
    __swig_getmethods__["tvn"] = _msms.TRIV_tvn_get
    if _newclass:
        tvn = _swig_property(_msms.TRIV_tvn_get)
    __swig_getmethods__["fl"] = _msms.TRIV_fl_get
    if _newclass:
        fl = _swig_property(_msms.TRIV_fl_get)

    def _c(self):
        return _msms.TRIV__c(self)

    def _n(self):
        return _msms.TRIV__n(self)

    def _uvw(self):
        return _msms.TRIV__uvw(self)

    def __init__(self):
        this = _msms.new_TRIV()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_TRIV
    __del__ = lambda self: None
TRIV_swigregister = _msms.TRIV_swigregister
TRIV_swigregister(TRIV)

class TRI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TRI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TRI, name)
    __repr__ = _swig_repr
    __swig_getmethods__["s"] = _msms.TRI_s_get
    if _newclass:
        s = _swig_property(_msms.TRI_s_get)

    def _s0(self):
        return _msms.TRI__s0(self)

    def _s1(self):
        return _msms.TRI__s1(self)

    def _s2(self):
        return _msms.TRI__s2(self)

    def __init__(self):
        this = _msms.new_TRI()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_TRI
    __del__ = lambda self: None
TRI_swigregister = _msms.TRI_swigregister
TRI_swigregister(TRI)

class SESV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SESV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SESV, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.SESV_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.SESV_nxt_get)
    __swig_getmethods__["prv"] = _msms.SESV_prv_get
    if _newclass:
        prv = _swig_property(_msms.SESV_prv_get)
    __swig_getmethods__["id"] = _msms.SESV_id_get
    if _newclass:
        id = _swig_property(_msms.SESV_id_get)
    __swig_getmethods__["a"] = _msms.SESV_a_get
    if _newclass:
        a = _swig_property(_msms.SESV_a_get)
    __swig_getmethods__["data"] = _msms.SESV_data_get
    if _newclass:
        data = _swig_property(_msms.SESV_data_get)
    __swig_getmethods__["n"] = _msms.SESV_n_get
    if _newclass:
        n = _swig_property(_msms.SESV_n_get)
    __swig_getmethods__["c"] = _msms.SESV_c_get
    if _newclass:
        c = _swig_property(_msms.SESV_c_get)
    __swig_getmethods__["beta"] = _msms.SESV_beta_get
    if _newclass:
        beta = _swig_property(_msms.SESV_beta_get)
    __swig_getmethods__["num"] = _msms.SESV_num_get
    if _newclass:
        num = _swig_property(_msms.SESV_num_get)
    __swig_getmethods__["at"] = _msms.SESV_at_get
    if _newclass:
        at = _swig_property(_msms.SESV_at_get)
    __swig_getmethods__["nba"] = _msms.SESV_nba_get
    if _newclass:
        nba = _swig_property(_msms.SESV_nba_get)
    __swig_getmethods__["mnba"] = _msms.SESV_mnba_get
    if _newclass:
        mnba = _swig_property(_msms.SESV_mnba_get)
    __swig_getmethods__["triv"] = _msms.SESV_triv_get
    if _newclass:
        triv = _swig_property(_msms.SESV_triv_get)
    __swig_getmethods__["type"] = _msms.SESV_type_get
    if _newclass:
        type = _swig_property(_msms.SESV_type_get)

    def get_a(self, i):
        return _msms.SESV_get_a(self, i)

    def _c(self):
        return _msms.SESV__c(self)

    def _n(self):
        return _msms.SESV__n(self)

    def __init__(self):
        this = _msms.new_SESV()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_SESV
    __del__ = lambda self: None
SESV_swigregister = _msms.SESV_swigregister
SESV_swigregister(SESV)

class SESE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SESE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SESE, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.SESE_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.SESE_nxt_get)
    __swig_getmethods__["prv"] = _msms.SESE_prv_get
    if _newclass:
        prv = _swig_property(_msms.SESE_prv_get)
    __swig_getmethods__["s"] = _msms.SESE_s_get
    if _newclass:
        s = _swig_property(_msms.SESE_s_get)
    __swig_getmethods__["f"] = _msms.SESE_f_get
    if _newclass:
        f = _swig_property(_msms.SESE_f_get)
    __swig_getmethods__["ar"] = _msms.SESE_ar_get
    if _newclass:
        ar = _swig_property(_msms.SESE_ar_get)
    __swig_getmethods__["triv"] = _msms.SESE_triv_get
    if _newclass:
        triv = _swig_property(_msms.SESE_triv_get)
    __swig_getmethods__["nxtSESaUp"] = _msms.SESE_nxtSESaUp_get
    if _newclass:
        nxtSESaUp = _swig_property(_msms.SESE_nxtSESaUp_get)
    __swig_getmethods__["data"] = _msms.SESE_data_get
    if _newclass:
        data = _swig_property(_msms.SESE_data_get)
    __swig_getmethods__["n"] = _msms.SESE_n_get
    if _newclass:
        n = _swig_property(_msms.SESE_n_get)
    __swig_getmethods__["c"] = _msms.SESE_c_get
    if _newclass:
        c = _swig_property(_msms.SESE_c_get)
    __swig_getmethods__["r"] = _msms.SESE_r_get
    if _newclass:
        r = _swig_property(_msms.SESE_r_get)
    __swig_getmethods__["theta"] = _msms.SESE_theta_get
    if _newclass:
        theta = _swig_property(_msms.SESE_theta_get)
    __swig_getmethods__["free_cap_area"] = _msms.SESE_free_cap_area_get
    if _newclass:
        free_cap_area = _swig_property(_msms.SESE_free_cap_area_get)
    __swig_getmethods__["ang"] = _msms.SESE_ang_get
    if _newclass:
        ang = _swig_property(_msms.SESE_ang_get)
    __swig_getmethods__["nbtriv"] = _msms.SESE_nbtriv_get
    if _newclass:
        nbtriv = _swig_property(_msms.SESE_nbtriv_get)
    __swig_getmethods__["num"] = _msms.SESE_num_get
    if _newclass:
        num = _swig_property(_msms.SESE_num_get)
    __swig_getmethods__["type"] = _msms.SESE_type_get
    if _newclass:
        type = _swig_property(_msms.SESE_type_get)
    __swig_getmethods__["cont_num"] = _msms.SESE_cont_num_get
    if _newclass:
        cont_num = _swig_property(_msms.SESE_cont_num_get)

    def _s0(self):
        return _msms.SESE__s0(self)

    def _s1(self):
        return _msms.SESE__s1(self)

    def _f0(self):
        return _msms.SESE__f0(self)

    def _f1(self):
        return _msms.SESE__f1(self)

    def get_triv(self, i):
        return _msms.SESE_get_triv(self, i)

    def _n(self):
        return _msms.SESE__n(self)

    def _c(self):
        return _msms.SESE__c(self)

    def __init__(self):
        this = _msms.new_SESE()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_SESE
    __del__ = lambda self: None
SESE_swigregister = _msms.SESE_swigregister
SESE_swigregister(SESE)

class SESF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SESF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SESF, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.SESF_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.SESF_nxt_get)
    __swig_getmethods__["prv"] = _msms.SESF_prv_get
    if _newclass:
        prv = _swig_property(_msms.SESF_prv_get)
    __swig_getmethods__["s"] = _msms.SESF_s_get
    if _newclass:
        s = _swig_property(_msms.SESF_s_get)
    __swig_getmethods__["a"] = _msms.SESF_a_get
    if _newclass:
        a = _swig_property(_msms.SESF_a_get)
    __swig_getmethods__["nxtUp"] = _msms.SESF_nxtUp_get
    if _newclass:
        nxtUp = _swig_property(_msms.SESF_nxtUp_get)
    __swig_getmethods__["nxttorUp"] = _msms.SESF_nxttorUp_get
    if _newclass:
        nxttorUp = _swig_property(_msms.SESF_nxttorUp_get)
    __swig_getmethods__["nxttUp"] = _msms.SESF_nxttUp_get
    if _newclass:
        nxttUp = _swig_property(_msms.SESF_nxttUp_get)
    __swig_getmethods__["dual"] = _msms.SESF_dual_get
    if _newclass:
        dual = _swig_property(_msms.SESF_dual_get)
    __swig_getmethods__["data"] = _msms.SESF_data_get
    if _newclass:
        data = _swig_property(_msms.SESF_data_get)
    __swig_getmethods__["tri"] = _msms.SESF_tri_get
    if _newclass:
        tri = _swig_property(_msms.SESF_tri_get)
    __swig_getmethods__["triv"] = _msms.SESF_triv_get
    if _newclass:
        triv = _swig_property(_msms.SESF_triv_get)
    __swig_getmethods__["buried"] = _msms.SESF_buried_get
    if _newclass:
        buried = _swig_property(_msms.SESF_buried_get)
    __swig_getmethods__["a_ses_area"] = _msms.SESF_a_ses_area_get
    if _newclass:
        a_ses_area = _swig_property(_msms.SESF_a_ses_area_get)
    __swig_getmethods__["nbtri"] = _msms.SESF_nbtri_get
    if _newclass:
        nbtri = _swig_property(_msms.SESF_nbtri_get)
    __swig_getmethods__["nbtriv"] = _msms.SESF_nbtriv_get
    if _newclass:
        nbtriv = _swig_property(_msms.SESF_nbtriv_get)
    __swig_getmethods__["num"] = _msms.SESF_num_get
    if _newclass:
        num = _swig_property(_msms.SESF_num_get)
    __swig_getmethods__["nb"] = _msms.SESF_nb_get
    if _newclass:
        nb = _swig_property(_msms.SESF_nb_get)
    __swig_getmethods__["nba"] = _msms.SESF_nba_get
    if _newclass:
        nba = _swig_property(_msms.SESF_nba_get)
    __swig_getmethods__["type"] = _msms.SESF_type_get
    if _newclass:
        type = _swig_property(_msms.SESF_type_get)
    __swig_getmethods__["pb"] = _msms.SESF_pb_get
    if _newclass:
        pb = _swig_property(_msms.SESF_pb_get)
    __swig_getmethods__["fl"] = _msms.SESF_fl_get
    if _newclass:
        fl = _swig_property(_msms.SESF_fl_get)
    __swig_getmethods__["cont_nb"] = _msms.SESF_cont_nb_get
    if _newclass:
        cont_nb = _swig_property(_msms.SESF_cont_nb_get)
    __swig_getmethods__["forceDot"] = _msms.SESF_forceDot_get
    if _newclass:
        forceDot = _swig_property(_msms.SESF_forceDot_get)
    __swig_getmethods__["direct"] = _msms.SESF_direct_get
    if _newclass:
        direct = _swig_property(_msms.SESF_direct_get)
    __swig_getmethods__["nbtriv_iso"] = _msms.SESF_nbtriv_iso_get
    if _newclass:
        nbtriv_iso = _swig_property(_msms.SESF_nbtriv_iso_get)

    def get_a(self, i):
        return _msms.SESF_get_a(self, i)

    def get_tri(self, i):
        return _msms.SESF_get_tri(self, i)

    def get_triv(self, i):
        return _msms.SESF_get_triv(self, i)

    def get_direct(self, i):
        return _msms.SESF_get_direct(self, i)

    def __init__(self):
        this = _msms.new_SESF()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_SESF
    __del__ = lambda self: None
SESF_swigregister = _msms.SESF_swigregister
SESF_swigregister(SESF)

class SES(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SES, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SES, name)
    __repr__ = _swig_repr
    __swig_getmethods__["nxt"] = _msms.SES_nxt_get
    if _newclass:
        nxt = _swig_property(_msms.SES_nxt_get)
    __swig_getmethods__["prv"] = _msms.SES_prv_get
    if _newclass:
        prv = _swig_property(_msms.SES_prv_get)
    __swig_getmethods__["ffa"] = _msms.SES_ffa_get
    if _newclass:
        ffa = _swig_property(_msms.SES_ffa_get)
    __swig_getmethods__["lfa"] = _msms.SES_lfa_get
    if _newclass:
        lfa = _swig_property(_msms.SES_lfa_get)
    __swig_getmethods__["far0"] = _msms.SES_far0_get
    if _newclass:
        far0 = _swig_property(_msms.SES_far0_get)
    __swig_getmethods__["lar"] = _msms.SES_lar_get
    if _newclass:
        lar = _swig_property(_msms.SES_lar_get)
    __swig_getmethods__["fso"] = _msms.SES_fso_get
    if _newclass:
        fso = _swig_property(_msms.SES_fso_get)
    __swig_getmethods__["lso"] = _msms.SES_lso_get
    if _newclass:
        lso = _swig_property(_msms.SES_lso_get)
    __swig_getmethods__["lsesf"] = _msms.SES_lsesf_get
    if _newclass:
        lsesf = _swig_property(_msms.SES_lsesf_get)
    __swig_getmethods__["fsttfup"] = _msms.SES_fsttfup_get
    if _newclass:
        fsttfup = _swig_property(_msms.SES_fsttfup_get)
    __swig_getmethods__["lsttfup"] = _msms.SES_lsttfup_get
    if _newclass:
        lsttfup = _swig_property(_msms.SES_lsttfup_get)
    __swig_getmethods__["fsttorup"] = _msms.SES_fsttorup_get
    if _newclass:
        fsttorup = _swig_property(_msms.SES_fsttorup_get)
    __swig_getmethods__["lsttorup"] = _msms.SES_lsttorup_get
    if _newclass:
        lsttorup = _swig_property(_msms.SES_lsttorup_get)
    __swig_getmethods__["lsese"] = _msms.SES_lsese_get
    if _newclass:
        lsese = _swig_property(_msms.SES_lsese_get)
    __swig_getmethods__["lsesv"] = _msms.SES_lsesv_get
    if _newclass:
        lsesv = _swig_property(_msms.SES_lsesv_get)
    __swig_getmethods__["data"] = _msms.SES_data_get
    if _newclass:
        data = _swig_property(_msms.SES_data_get)
    __swig_getmethods__["nbf"] = _msms.SES_nbf_get
    if _newclass:
        nbf = _swig_property(_msms.SES_nbf_get)
    __swig_getmethods__["nba"] = _msms.SES_nba_get
    if _newclass:
        nba = _swig_property(_msms.SES_nba_get)
    __swig_getmethods__["nbs"] = _msms.SES_nbs_get
    if _newclass:
        nbs = _swig_property(_msms.SES_nbs_get)
    __swig_getmethods__["nbss"] = _msms.SES_nbss_get
    if _newclass:
        nbss = _swig_property(_msms.SES_nbss_get)
    __swig_getmethods__["nbse"] = _msms.SES_nbse_get
    if _newclass:
        nbse = _swig_property(_msms.SES_nbse_get)
    __swig_getmethods__["nbft"] = _msms.SES_nbft_get
    if _newclass:
        nbft = _swig_property(_msms.SES_nbft_get)
    __swig_getmethods__["num"] = _msms.SES_num_get
    if _newclass:
        num = _swig_property(_msms.SES_num_get)
    __swig_getmethods__["holes_reent"] = _msms.SES_holes_reent_get
    if _newclass:
        holes_reent = _swig_property(_msms.SES_holes_reent_get)
    __swig_getmethods__["holes_cont"] = _msms.SES_holes_cont_get
    if _newclass:
        holes_cont = _swig_property(_msms.SES_holes_cont_get)
    __swig_getmethods__["nb_comp"] = _msms.SES_nb_comp_get
    if _newclass:
        nb_comp = _swig_property(_msms.SES_nb_comp_get)
    __swig_getmethods__["a_reent_area"] = _msms.SES_a_reent_area_get
    if _newclass:
        a_reent_area = _swig_property(_msms.SES_a_reent_area_get)
    __swig_getmethods__["a_toric_area"] = _msms.SES_a_toric_area_get
    if _newclass:
        a_toric_area = _swig_property(_msms.SES_a_toric_area_get)
    __swig_getmethods__["a_contact_area"] = _msms.SES_a_contact_area_get
    if _newclass:
        a_contact_area = _swig_property(_msms.SES_a_contact_area_get)
    __swig_getmethods__["a_ses_area"] = _msms.SES_a_ses_area_get
    if _newclass:
        a_ses_area = _swig_property(_msms.SES_a_ses_area_get)
    __swig_getmethods__["a_sas_area"] = _msms.SES_a_sas_area_get
    if _newclass:
        a_sas_area = _swig_property(_msms.SES_a_sas_area_get)
    __swig_getmethods__["a_ses_volume"] = _msms.SES_a_ses_volume_get
    if _newclass:
        a_ses_volume = _swig_property(_msms.SES_a_ses_volume_get)
    __swig_getmethods__["a_sas_volume"] = _msms.SES_a_sas_volume_get
    if _newclass:
        a_sas_volume = _swig_property(_msms.SES_a_sas_volume_get)
    __swig_getmethods__["a_buried_ses_area"] = _msms.SES_a_buried_ses_area_get
    if _newclass:
        a_buried_ses_area = _swig_property(_msms.SES_a_buried_ses_area_get)
    __swig_getmethods__["a_buried_sas_area"] = _msms.SES_a_buried_sas_area_get
    if _newclass:
        a_buried_sas_area = _swig_property(_msms.SES_a_buried_sas_area_get)
    __swig_getmethods__["density"] = _msms.SES_density_get
    if _newclass:
        density = _swig_property(_msms.SES_density_get)
    __swig_getmethods__["density_sq"] = _msms.SES_density_sq_get
    if _newclass:
        density_sq = _swig_property(_msms.SES_density_sq_get)
    __swig_getmethods__["hdensity"] = _msms.SES_hdensity_get
    if _newclass:
        hdensity = _swig_property(_msms.SES_hdensity_get)
    __swig_getmethods__["hdensity_sq"] = _msms.SES_hdensity_sq_get
    if _newclass:
        hdensity_sq = _swig_property(_msms.SES_hdensity_sq_get)
    __swig_getmethods__["cercang"] = _msms.SES_cercang_get
    if _newclass:
        cercang = _swig_property(_msms.SES_cercang_get)
    __swig_getmethods__["hdcercang"] = _msms.SES_hdcercang_get
    if _newclass:
        hdcercang = _swig_property(_msms.SES_hdcercang_get)
    __swig_getmethods__["npcerc"] = _msms.SES_npcerc_get
    if _newclass:
        npcerc = _swig_property(_msms.SES_npcerc_get)
    __swig_getmethods__["hdnpcerc"] = _msms.SES_hdnpcerc_get
    if _newclass:
        hdnpcerc = _swig_property(_msms.SES_hdnpcerc_get)
    __swig_getmethods__["nbtri1"] = _msms.SES_nbtri1_get
    if _newclass:
        nbtri1 = _swig_property(_msms.SES_nbtri1_get)
    __swig_getmethods__["nbtri2"] = _msms.SES_nbtri2_get
    if _newclass:
        nbtri2 = _swig_property(_msms.SES_nbtri2_get)
    __swig_getmethods__["nbtri3"] = _msms.SES_nbtri3_get
    if _newclass:
        nbtri3 = _swig_property(_msms.SES_nbtri3_get)
    __swig_getmethods__["nbtri"] = _msms.SES_nbtri_get
    if _newclass:
        nbtri = _swig_property(_msms.SES_nbtri_get)
    __swig_getmethods__["nbtriv"] = _msms.SES_nbtriv_get
    if _newclass:
        nbtriv = _swig_property(_msms.SES_nbtriv_get)
    __swig_getmethods__["nbtriv_iso"] = _msms.SES_nbtriv_iso_get
    if _newclass:
        nbtriv_iso = _swig_property(_msms.SES_nbtriv_iso_get)
    __swig_getmethods__["tri_cont"] = _msms.SES_tri_cont_get
    if _newclass:
        tri_cont = _swig_property(_msms.SES_tri_cont_get)
    __swig_getmethods__["n_area_mode"] = _msms.SES_n_area_mode_get
    if _newclass:
        n_area_mode = _swig_property(_msms.SES_n_area_mode_get)
    __swig_getmethods__["n_ses_area"] = _msms.SES_n_ses_area_get
    if _newclass:
        n_ses_area = _swig_property(_msms.SES_n_ses_area_get)
    __swig_getmethods__["n_sas_area"] = _msms.SES_n_sas_area_get
    if _newclass:
        n_sas_area = _swig_property(_msms.SES_n_sas_area_get)
    __swig_getmethods__["n_buried_ses_area"] = _msms.SES_n_buried_ses_area_get
    if _newclass:
        n_buried_ses_area = _swig_property(_msms.SES_n_buried_ses_area_get)
    __swig_getmethods__["n_buried_sas_area"] = _msms.SES_n_buried_sas_area_get
    if _newclass:
        n_buried_sas_area = _swig_property(_msms.SES_n_buried_sas_area_get)
    __swig_getmethods__["n_ses_volume"] = _msms.SES_n_ses_volume_get
    if _newclass:
        n_ses_volume = _swig_property(_msms.SES_n_ses_volume_get)
    __swig_getmethods__["n_sas_volume"] = _msms.SES_n_sas_volume_get
    if _newclass:
        n_sas_volume = _swig_property(_msms.SES_n_sas_volume_get)
    __swig_getmethods__["genusAna"] = _msms.SES_genusAna_get
    if _newclass:
        genusAna = _swig_property(_msms.SES_genusAna_get)
    __swig_getmethods__["genusTri"] = _msms.SES_genusTri_get
    if _newclass:
        genusTri = _swig_property(_msms.SES_genusTri_get)

    def _nbft(self):
        return _msms.SES__nbft(self)

    def __init__(self):
        this = _msms.new_SES()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_SES
    __del__ = lambda self: None
SES_swigregister = _msms.SES_swigregister
SES_swigregister(SES)

class SESR(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SESR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SESR, name)
    __repr__ = _swig_repr
    __swig_getmethods__["fst"] = _msms.SESR_fst_get
    if _newclass:
        fst = _swig_property(_msms.SESR_fst_get)
    __swig_getmethods__["lst"] = _msms.SESR_lst_get
    if _newclass:
        lst = _swig_property(_msms.SESR_lst_get)
    __swig_getmethods__["nb"] = _msms.SESR_nb_get
    if _newclass:
        nb = _swig_property(_msms.SESR_nb_get)

    def __init__(self):
        this = _msms.new_SESR()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_SESR
    __del__ = lambda self: None
SESR_swigregister = _msms.SESR_swigregister
SESR_swigregister(SESR)

class MOLSRF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MOLSRF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MOLSRF, name)
    __repr__ = _swig_repr
    __swig_getmethods__["name"] = _msms.MOLSRF_name_get
    if _newclass:
        name = _swig_property(_msms.MOLSRF_name_get)
    __swig_getmethods__["rsr"] = _msms.MOLSRF_rsr_get
    if _newclass:
        rsr = _swig_property(_msms.MOLSRF_rsr_get)
    __swig_getmethods__["sesr"] = _msms.MOLSRF_sesr_get
    if _newclass:
        sesr = _swig_property(_msms.MOLSRF_sesr_get)
    __swig_getmethods__["data"] = _msms.MOLSRF_data_get
    if _newclass:
        data = _swig_property(_msms.MOLSRF_data_get)
    __swig_getmethods__["maxr"] = _msms.MOLSRF_maxr_get
    if _newclass:
        maxr = _swig_property(_msms.MOLSRF_maxr_get)
    __swig_getmethods__["minr"] = _msms.MOLSRF_minr_get
    if _newclass:
        minr = _swig_property(_msms.MOLSRF_minr_get)
    __swig_getmethods__["extreme"] = _msms.MOLSRF_extreme_get
    if _newclass:
        extreme = _swig_property(_msms.MOLSRF_extreme_get)
    __swig_getmethods__["nbat"] = _msms.MOLSRF_nbat_get
    if _newclass:
        nbat = _swig_property(_msms.MOLSRF_nbat_get)
    __swig_getmethods__["nats"] = _msms.MOLSRF_nats_get
    if _newclass:
        nats = _swig_property(_msms.MOLSRF_nats_get)
    __swig_getmethods__["natc"] = _msms.MOLSRF_natc_get
    if _newclass:
        natc = _swig_property(_msms.MOLSRF_natc_get)
    __swig_getmethods__["maxat"] = _msms.MOLSRF_maxat_get
    if _newclass:
        maxat = _swig_property(_msms.MOLSRF_maxat_get)
    __swig_getmethods__["filename"] = _msms.MOLSRF_filename_get
    if _newclass:
        filename = _swig_property(_msms.MOLSRF_filename_get)
    __swig_setmethods__["rp"] = _msms.MOLSRF_rp_set
    __swig_getmethods__["rp"] = _msms.MOLSRF_rp_get
    if _newclass:
        rp = _swig_property(_msms.MOLSRF_rp_get, _msms.MOLSRF_rp_set)
    __swig_setmethods__["rp1"] = _msms.MOLSRF_rp1_set
    __swig_getmethods__["rp1"] = _msms.MOLSRF_rp1_get
    if _newclass:
        rp1 = _swig_property(_msms.MOLSRF_rp1_get, _msms.MOLSRF_rp1_set)
    __swig_setmethods__["density"] = _msms.MOLSRF_density_set
    __swig_getmethods__["density"] = _msms.MOLSRF_density_get
    if _newclass:
        density = _swig_property(_msms.MOLSRF_density_get, _msms.MOLSRF_density_set)
    __swig_getmethods__["tmtab"] = _msms.MOLSRF_tmtab_get
    if _newclass:
        tmtab = _swig_property(_msms.MOLSRF_tmtab_get)
    __swig_getmethods__["dots"] = _msms.MOLSRF_dots_get
    if _newclass:
        dots = _swig_property(_msms.MOLSRF_dots_get)
    __swig_getmethods__["Maxnbt"] = _msms.MOLSRF_Maxnbt_get
    if _newclass:
        Maxnbt = _swig_property(_msms.MOLSRF_Maxnbt_get)
    __swig_getmethods__["nbt"] = _msms.MOLSRF_nbt_get
    if _newclass:
        nbt = _swig_property(_msms.MOLSRF_nbt_get)
    __swig_getmethods__["MaxDots"] = _msms.MOLSRF_MaxDots_get
    if _newclass:
        MaxDots = _swig_property(_msms.MOLSRF_MaxDots_get)
    __swig_getmethods__["MaxEdges"] = _msms.MOLSRF_MaxEdges_get
    if _newclass:
        MaxEdges = _swig_property(_msms.MOLSRF_MaxEdges_get)
    __swig_getmethods__["MaxTriangles"] = _msms.MOLSRF_MaxTriangles_get
    if _newclass:
        MaxTriangles = _swig_property(_msms.MOLSRF_MaxTriangles_get)
    __swig_getmethods__["allocated_MaxDots"] = _msms.MOLSRF_allocated_MaxDots_get
    if _newclass:
        allocated_MaxDots = _swig_property(_msms.MOLSRF_allocated_MaxDots_get)
    __swig_getmethods__["MinDistSites2"] = _msms.MOLSRF_MinDistSites2_get
    if _newclass:
        MinDistSites2 = _swig_property(_msms.MOLSRF_MinDistSites2_get)
    __swig_setmethods__["all_components"] = _msms.MOLSRF_all_components_set
    __swig_getmethods__["all_components"] = _msms.MOLSRF_all_components_get
    if _newclass:
        all_components = _swig_property(_msms.MOLSRF_all_components_get, _msms.MOLSRF_all_components_set)
    __swig_setmethods__["free_vert"] = _msms.MOLSRF_free_vert_set
    __swig_getmethods__["free_vert"] = _msms.MOLSRF_free_vert_get
    if _newclass:
        free_vert = _swig_property(_msms.MOLSRF_free_vert_get, _msms.MOLSRF_free_vert_set)
    __swig_setmethods__["cusp_trim"] = _msms.MOLSRF_cusp_trim_set
    __swig_getmethods__["cusp_trim"] = _msms.MOLSRF_cusp_trim_get
    if _newclass:
        cusp_trim = _swig_property(_msms.MOLSRF_cusp_trim_get, _msms.MOLSRF_cusp_trim_set)
    __swig_setmethods__["noh"] = _msms.MOLSRF_noh_set
    __swig_getmethods__["noh"] = _msms.MOLSRF_noh_get
    if _newclass:
        noh = _swig_property(_msms.MOLSRF_noh_get, _msms.MOLSRF_noh_set)
    __swig_setmethods__["dotsOnly"] = _msms.MOLSRF_dotsOnly_set
    __swig_getmethods__["dotsOnly"] = _msms.MOLSRF_dotsOnly_get
    if _newclass:
        dotsOnly = _swig_property(_msms.MOLSRF_dotsOnly_get, _msms.MOLSRF_dotsOnly_set)
    __swig_setmethods__["cleanup_rs"] = _msms.MOLSRF_cleanup_rs_set
    __swig_getmethods__["cleanup_rs"] = _msms.MOLSRF_cleanup_rs_get
    if _newclass:
        cleanup_rs = _swig_property(_msms.MOLSRF_cleanup_rs_get, _msms.MOLSRF_cleanup_rs_set)
    __swig_setmethods__["cleanup_ses"] = _msms.MOLSRF_cleanup_ses_set
    __swig_getmethods__["cleanup_ses"] = _msms.MOLSRF_cleanup_ses_get
    if _newclass:
        cleanup_ses = _swig_property(_msms.MOLSRF_cleanup_ses_get, _msms.MOLSRF_cleanup_ses_set)
    __swig_getmethods__["fstup"] = _msms.MOLSRF_fstup_get
    if _newclass:
        fstup = _swig_property(_msms.MOLSRF_fstup_get)
    __swig_getmethods__["up_num"] = _msms.MOLSRF_up_num_get
    if _newclass:
        up_num = _swig_property(_msms.MOLSRF_up_num_get)
    __swig_setmethods__["up_mode"] = _msms.MOLSRF_up_mode_set
    __swig_getmethods__["up_mode"] = _msms.MOLSRF_up_mode_get
    if _newclass:
        up_mode = _swig_property(_msms.MOLSRF_up_mode_get, _msms.MOLSRF_up_mode_set)
    __swig_setmethods__["up_density"] = _msms.MOLSRF_up_density_set
    __swig_getmethods__["up_density"] = _msms.MOLSRF_up_density_get
    if _newclass:
        up_density = _swig_property(_msms.MOLSRF_up_density_get, _msms.MOLSRF_up_density_set)
    __swig_setmethods__["MS_mfl"] = _msms.MOLSRF_MS_mfl_set
    __swig_getmethods__["MS_mfl"] = _msms.MOLSRF_MS_mfl_get
    if _newclass:
        MS_mfl = _swig_property(_msms.MOLSRF_MS_mfl_get, _msms.MOLSRF_MS_mfl_set)
    __swig_setmethods__["restart_mode"] = _msms.MOLSRF_restart_mode_set
    __swig_getmethods__["restart_mode"] = _msms.MOLSRF_restart_mode_get
    if _newclass:
        restart_mode = _swig_property(_msms.MOLSRF_restart_mode_get, _msms.MOLSRF_restart_mode_set)
    __swig_setmethods__["mod_dist"] = _msms.MOLSRF_mod_dist_set
    __swig_getmethods__["mod_dist"] = _msms.MOLSRF_mod_dist_get
    if _newclass:
        mod_dist = _swig_property(_msms.MOLSRF_mod_dist_get, _msms.MOLSRF_mod_dist_set)
    __swig_setmethods__["restart_ana"] = _msms.MOLSRF_restart_ana_set
    __swig_getmethods__["restart_ana"] = _msms.MOLSRF_restart_ana_get
    if _newclass:
        restart_ana = _swig_property(_msms.MOLSRF_restart_ana_get, _msms.MOLSRF_restart_ana_set)
    __swig_setmethods__["restart_tri"] = _msms.MOLSRF_restart_tri_set
    __swig_getmethods__["restart_tri"] = _msms.MOLSRF_restart_tri_get
    if _newclass:
        restart_tri = _swig_property(_msms.MOLSRF_restart_tri_get, _msms.MOLSRF_restart_tri_set)
    __swig_setmethods__["rest_on_pbr"] = _msms.MOLSRF_rest_on_pbr_set
    __swig_getmethods__["rest_on_pbr"] = _msms.MOLSRF_rest_on_pbr_get
    if _newclass:
        rest_on_pbr = _swig_property(_msms.MOLSRF_rest_on_pbr_get, _msms.MOLSRF_rest_on_pbr_set)
    __swig_setmethods__["rest_on_pbc"] = _msms.MOLSRF_rest_on_pbc_set
    __swig_getmethods__["rest_on_pbc"] = _msms.MOLSRF_rest_on_pbc_get
    if _newclass:
        rest_on_pbc = _swig_property(_msms.MOLSRF_rest_on_pbc_get, _msms.MOLSRF_rest_on_pbc_set)
    __swig_setmethods__["max_try"] = _msms.MOLSRF_max_try_set
    __swig_getmethods__["max_try"] = _msms.MOLSRF_max_try_get
    if _newclass:
        max_try = _swig_property(_msms.MOLSRF_max_try_get, _msms.MOLSRF_max_try_set)
    __swig_getmethods__["try_num"] = _msms.MOLSRF_try_num_get
    if _newclass:
        try_num = _swig_property(_msms.MOLSRF_try_num_get)

    def _extreme(self):
        return _msms.MOLSRF__extreme(self)

    def get_atm(self, i):
        return _msms.MOLSRF_get_atm(self, i)

    def __init__(self, *args, **kwargs):
        this = _msms.new_MOLSRF(*args, **kwargs)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _msms.delete_MOLSRF
    __del__ = lambda self: None

    def findBuriedVertices(self, su, coords, nat):
        return _msms.MOLSRF_findBuriedVertices(self, su, coords, nat)
MOLSRF_swigregister = _msms.MOLSRF_swigregister
MOLSRF_swigregister(MOLSRF)


def MS_detailed_info_molsrf(ms):
    return _msms.MS_detailed_info_molsrf(ms)
MS_detailed_info_molsrf = _msms.MS_detailed_info_molsrf

def MS_info_molsrf(ms):
    return _msms.MS_info_molsrf(ms)
MS_info_molsrf = _msms.MS_info_molsrf

def MS_reset_atom_update_flag(ms):
    return _msms.MS_reset_atom_update_flag(ms)
MS_reset_atom_update_flag = _msms.MS_reset_atom_update_flag

def MS_get_xyzr_update(ms, file, max):
    return _msms.MS_get_xyzr_update(ms, file, max)
MS_get_xyzr_update = _msms.MS_get_xyzr_update

def MS_updateSpheres(ms, nb, indices, coords):
    return _msms.MS_updateSpheres(ms, nb, indices, coords)
MS_updateSpheres = _msms.MS_updateSpheres

def MS_addSpheres(ms, nb, coords, names):
    return _msms.MS_addSpheres(ms, nb, coords, names)
MS_addSpheres = _msms.MS_addSpheres

def MS_reduced_surface(ms):
    return _msms.MS_reduced_surface(ms)
MS_reduced_surface = _msms.MS_reduced_surface

def MS_update_reduced_surface(ms, rs, nup):
    return _msms.MS_update_reduced_surface(ms, rs, nup)
MS_update_reduced_surface = _msms.MS_update_reduced_surface

def MS_write_rs_component(ms, rs, name, mode):
    return _msms.MS_write_rs_component(ms, rs, name, mode)
MS_write_rs_component = _msms.MS_write_rs_component

def MS_writeSolventAccessibleatoms(ms, name, mode):
    return _msms.MS_writeSolventAccessibleatoms(ms, name, mode)
MS_writeSolventAccessibleatoms = _msms.MS_writeSolventAccessibleatoms

def MS_reset_RSR(ms):
    return _msms.MS_reset_RSR(ms)
MS_reset_RSR = _msms.MS_reset_RSR

def MS_free_RS_vertices(ms):
    return _msms.MS_free_RS_vertices(ms)
MS_free_RS_vertices = _msms.MS_free_RS_vertices

def MS_solvent_excluded_surface(ms, rs):
    return _msms.MS_solvent_excluded_surface(ms, rs)
MS_solvent_excluded_surface = _msms.MS_solvent_excluded_surface

def MS_update_ses(ms, rs, nup):
    return _msms.MS_update_ses(ms, rs, nup)
MS_update_ses = _msms.MS_update_ses

def MS_compute_SES_area(ms):
    return _msms.MS_compute_SES_area(ms)
MS_compute_SES_area = _msms.MS_compute_SES_area

def MS_update_SES_area(ms, su):
    return _msms.MS_update_SES_area(ms, su)
MS_update_SES_area = _msms.MS_update_SES_area

def MS_write_surface_areas(ms, f, cpnum):
    return _msms.MS_write_surface_areas(ms, f, cpnum)
MS_write_surface_areas = _msms.MS_write_surface_areas

def MS_set_SES_density(ses, density, hd, rp):
    return _msms.MS_set_SES_density(ses, density, hd, rp)
MS_set_SES_density = _msms.MS_set_SES_density

def MS_free_SES_comp(su):
    return _msms.MS_free_SES_comp(su)
MS_free_SES_comp = _msms.MS_free_SES_comp

def MS_reset_SESR(ms):
    return _msms.MS_reset_SESR(ms)
MS_reset_SESR = _msms.MS_reset_SESR

def MS_make_templates(ms, s):
    return _msms.MS_make_templates(ms, s)
MS_make_templates = _msms.MS_make_templates

def MS_triangulate_SES_component(ms, rs):
    return _msms.MS_triangulate_SES_component(ms, rs)
MS_triangulate_SES_component = _msms.MS_triangulate_SES_component

def MS_compute_numerical_area_vol(ms, sc, mode):
    return _msms.MS_compute_numerical_area_vol(ms, sc, mode)
MS_compute_numerical_area_vol = _msms.MS_compute_numerical_area_vol

def MS_update_triangulation_SES_component(ms, rs, mode, density, nup):
    return _msms.MS_update_triangulation_SES_component(ms, rs, mode, density, nup)
MS_update_triangulation_SES_component = _msms.MS_update_triangulation_SES_component

def MS_write_triangulated_SES_component(file, ms, s, no_header, mode):
    return _msms.MS_write_triangulated_SES_component(file, ms, s, no_header, mode)
MS_write_triangulated_SES_component = _msms.MS_write_triangulated_SES_component

def MS_free_templates(ms):
    return _msms.MS_free_templates(ms)
MS_free_templates = _msms.MS_free_templates

def MS_free_triangulated_surface(s):
    return _msms.MS_free_triangulated_surface(s)
MS_free_triangulated_surface = _msms.MS_free_triangulated_surface

def MS_resetBuriedVertexFlags(su):
    return _msms.MS_resetBuriedVertexFlags(su)
MS_resetBuriedVertexFlags = _msms.MS_resetBuriedVertexFlags

def MS_resetBuriedVertexArea(su):
    return _msms.MS_resetBuriedVertexArea(su)
MS_resetBuriedVertexArea = _msms.MS_resetBuriedVertexArea

def MS_vertexBuriedSurfaceArea(su):
    return _msms.MS_vertexBuriedSurfaceArea(su)
MS_vertexBuriedSurfaceArea = _msms.MS_vertexBuriedSurfaceArea

def MS_write_coordinates(ms, filename):
    return _msms.MS_write_coordinates(ms, filename)
MS_write_coordinates = _msms.MS_write_coordinates

def MS_restore_radii(ms, rs):
    return _msms.MS_restore_radii(ms, rs)
MS_restore_radii = _msms.MS_restore_radii

def MS_printInfo(ms, keyString):
    return _msms.MS_printInfo(ms, keyString)
MS_printInfo = _msms.MS_printInfo

def MS_genus(c, v, e, f):
    return _msms.MS_genus(c, v, e, f)
MS_genus = _msms.MS_genus

def MS_tagCloseProbes(ms, rs, cut):
    return _msms.MS_tagCloseProbes(ms, rs, cut)
MS_tagCloseProbes = _msms.MS_tagCloseProbes

def MS_compute_surface(ms, rp, dens, hdens=3.0):
    return _msms.MS_compute_surface(ms, rp, dens, hdens)
MS_compute_surface = _msms.MS_compute_surface

def MS_add_component(ms, a1):
    return _msms.MS_add_component(ms, a1)
MS_add_component = _msms.MS_add_component

def MS_update_surface(ms, rs, mode, density, nup):
    return _msms.MS_update_surface(ms, rs, mode, density, nup)
MS_update_surface = _msms.MS_update_surface

def MS_reset_msms_err():
    return _msms.MS_reset_msms_err()
MS_reset_msms_err = _msms.MS_reset_msms_err
# This file is compatible with both classic and new-style classes.

MS_readxyzr = _msms.MS_readxyzr

