################################################################################
##
## This library is free software; you can redistribute it and/or
## modify it under the terms of the GNU Lesser General Public
## License as published by the Free Software Foundation; either
## version 2.1 of the License, or (at your option) any later version.
## 
## This library is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## Lesser General Public License for more details.
## 
## You should have received a copy of the GNU Lesser General Public
## License along with this library; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
##
## (C) Copyrights Dr. Michel F. Sanner and TSRI 2016
##
################################################################################

#############################################################################
#
# Author: Michel F. SANNER
#
# Copyright: M. Sanner TSRI 2000
#
#############################################################################

#
# $Header: /mnt/raid/services/cvs/DejaVu2/bitPatterns.py,v 1.1.1.1.4.1 2017/07/13 22:28:33 annao Exp $
#
# $Id: bitPatterns.py,v 1.1.1.1.4.1 2017/07/13 22:28:33 annao Exp $
#

import numpy

#finest grain 50% solid:
pat1 = numpy.array(( 
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55 ), 'B' )

pat2 = numpy.array(( 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 
0x55, 0x55, 0x55, 0x55, 0xAA, 0xAA, 0xAA, 0xAA ), 'B') 

#medium grained 25% solid:
pat3 = numpy.array(( 
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00), 'B')


pat4 = numpy.array(( 
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00), 'B')

pat5 = numpy.array(( 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA, 
0x00, 0x00, 0x00, 0x00, 0xAA, 0xAA, 0xAA, 0xAA ),'B')

pat6 = numpy.array(( 
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55), 'B')

#these is 25% but adjacent pixels colored so looks striped
pat7 = numpy.array(( 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 
0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44), 'B') 

#12.5% faint staggered stripe
pat8 = numpy.array(( 
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00), 'B')


patternList=[pat1, pat2, pat3, pat4, pat5, pat6, pat7, pat8]
